// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using apps.Models.Contexts;

#nullable disable

namespace apps.Migrations
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("apps.Models.Entities.EngineRule", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code")
                        .HasColumnOrder(0);

                    b.Property<bool>("AbsoluteStatus")
                        .HasColumnType("boolean")
                        .HasColumnName("absolute_status ")
                        .HasColumnOrder(28);

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("action_type")
                        .HasColumnOrder(8);

                    b.Property<string>("ActionValue")
                        .HasColumnType("text")
                        .HasColumnName("action_value")
                        .HasColumnOrder(9);

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("active_flag");

                    b.Property<int>("Cls")
                        .HasColumnType("integer")
                        .HasColumnName("cls")
                        .HasColumnOrder(4);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description")
                        .HasColumnOrder(20);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end_date")
                        .HasColumnOrder(15);

                    b.Property<string>("EngineWorkflowCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("engine_workflow_code")
                        .HasColumnOrder(1);

                    b.Property<string>("EntertaimentNip")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("entertaiment_nip")
                        .HasColumnOrder(19);

                    b.Property<string>("ImageLink")
                        .HasColumnType("text")
                        .HasColumnName("image_link")
                        .HasColumnOrder(27);

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("item_type")
                        .HasColumnOrder(6);

                    b.Property<int>("Lvl")
                        .HasColumnType("integer")
                        .HasColumnName("lvl")
                        .HasColumnOrder(5);

                    b.Property<decimal?>("MaxBalance")
                        .HasColumnType("numeric")
                        .HasColumnName("max_balance")
                        .HasColumnOrder(13);

                    b.Property<int?>("MaxMultiple")
                        .HasColumnType("integer")
                        .HasColumnName("max_multiple")
                        .HasColumnOrder(11);

                    b.Property<int>("MaxQty")
                        .HasColumnType("integer")
                        .HasColumnName("max_qty")
                        .HasColumnOrder(18);

                    b.Property<int?>("MaxUse")
                        .HasColumnType("integer")
                        .HasColumnName("max_use")
                        .HasColumnOrder(12);

                    b.Property<string>("MaxValue")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("max_value")
                        .HasColumnOrder(10);

                    b.Property<bool>("MemberNewStatus")
                        .HasColumnType("boolean")
                        .HasColumnName("member_new_status")
                        .HasColumnOrder(24);

                    b.Property<int>("MemberQuotaPeriode")
                        .HasColumnType("integer")
                        .HasColumnName("member_quota_periode")
                        .HasColumnOrder(25);

                    b.Property<int>("MemberRepeatPeriode")
                        .HasColumnType("integer")
                        .HasColumnName("member_repeat_periode")
                        .HasColumnOrder(26);

                    b.Property<bool>("MemberStatus")
                        .HasColumnType("boolean")
                        .HasColumnName("member_status")
                        .HasColumnOrder(23);

                    b.Property<int>("MultipleQty")
                        .HasColumnType("integer")
                        .HasColumnName("multiple_qty")
                        .HasColumnOrder(17);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name")
                        .HasColumnOrder(3);

                    b.Property<string>("RedeemCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("redeem_code")
                        .HasColumnOrder(2);

                    b.Property<string>("RefCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ref_code")
                        .HasColumnOrder(16);

                    b.Property<string>("ResultType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("result_type")
                        .HasColumnOrder(7);

                    b.Property<bool>("ShowStatus")
                        .HasColumnType("boolean")
                        .HasColumnName("show_status")
                        .HasColumnOrder(22);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_date")
                        .HasColumnOrder(14);

                    b.Property<string>("TermsCondition")
                        .HasColumnType("text")
                        .HasColumnName("terms_condition")
                        .HasColumnOrder(21);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_date");

                    b.Property<string>("VoucherCode")
                        .HasColumnType("text")
                        .HasColumnName("voucher_code")
                        .HasColumnOrder(30);

                    b.Property<bool>("VoucherStatus")
                        .HasColumnType("boolean")
                        .HasColumnName("voucherStatus ")
                        .HasColumnOrder(29);

                    b.HasKey("Code");

                    b.HasIndex("EngineWorkflowCode");

                    b.ToTable("engine_rule");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleApps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("active_flag");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code")
                        .HasColumnOrder(2);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("EngineRuleCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("engine_rule_code")
                        .HasColumnOrder(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name")
                        .HasColumnOrder(3);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("EngineRuleCode");

                    b.ToTable("engine_rule_apps");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleExpression", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("active_flag");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code")
                        .HasColumnOrder(2);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("EngineRuleCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("engine_rule_code")
                        .HasColumnOrder(1);

                    b.Property<string>("Expression")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("expression")
                        .HasColumnOrder(6);

                    b.Property<int>("GroupLine")
                        .HasColumnType("integer")
                        .HasColumnName("group_line")
                        .HasColumnOrder(4);

                    b.Property<int>("LineNum")
                        .HasColumnType("integer")
                        .HasColumnName("line_num")
                        .HasColumnOrder(3);

                    b.Property<string>("Link")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("link")
                        .HasColumnOrder(7);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name")
                        .HasColumnOrder(5);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("EngineRuleCode");

                    b.ToTable("engine_rule_expression");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleMembership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("active_flag");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("EngineRuleCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("engine_rule_code")
                        .HasColumnOrder(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name")
                        .HasColumnOrder(2);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("EngineRuleCode");

                    b.ToTable("engine_rule_membership");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleMop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("active_flag");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("EngineRuleCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("engine_rule_code")
                        .HasColumnOrder(1);

                    b.Property<string>("GroupCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("group_code")
                        .HasColumnOrder(5);

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("group_name")
                        .HasColumnOrder(6);

                    b.Property<int>("LineNum")
                        .HasColumnType("integer")
                        .HasColumnName("line_num")
                        .HasColumnOrder(2);

                    b.Property<string>("SelectionCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("selection_code")
                        .HasColumnOrder(3);

                    b.Property<string>("SelectionName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("selection_name")
                        .HasColumnOrder(4);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("EngineRuleCode");

                    b.ToTable("engine_rule_mop");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("active_flag");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("EngineRuleCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("engine_rule_code")
                        .HasColumnOrder(1);

                    b.Property<int>("GroupLine")
                        .HasColumnType("integer")
                        .HasColumnName("group_line")
                        .HasColumnOrder(3);

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("item")
                        .HasColumnOrder(4);

                    b.Property<int>("LineNum")
                        .HasColumnType("integer")
                        .HasColumnName("line_num")
                        .HasColumnOrder(2);

                    b.Property<string>("Link")
                        .HasColumnType("text")
                        .HasColumnName("link")
                        .HasColumnOrder(7);

                    b.Property<string>("MaxValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("max_value")
                        .HasColumnOrder(6);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_date");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.HasIndex("EngineRuleCode");

                    b.ToTable("engine_rule_result");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleSite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("active_flag");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code")
                        .HasColumnOrder(2);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("EngineRuleCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("engine_rule_code")
                        .HasColumnOrder(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name")
                        .HasColumnOrder(3);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("EngineRuleCode");

                    b.ToTable("engine_rule_site");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleVariable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("code")
                        .HasColumnOrder(3);

                    b.Property<string>("EngineRuleCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("engine_rule_code")
                        .HasColumnOrder(1);

                    b.Property<string>("Expression")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("expression")
                        .HasColumnOrder(5);

                    b.Property<int>("LineNum")
                        .HasColumnType("integer")
                        .HasColumnName("line_num")
                        .HasColumnOrder(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("EngineRuleCode");

                    b.ToTable("engine_rule_variable");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineWorkflow", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("code")
                        .HasColumnOrder(0);

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("active_flag");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name")
                        .HasColumnOrder(1);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_date");

                    b.HasKey("Code");

                    b.ToTable("engine_workflow");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineWorkflowExpression", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("active_flag");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("code")
                        .HasColumnOrder(2);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("EngineWorkflowCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("engine_workflow_code")
                        .HasColumnOrder(1);

                    b.Property<string>("Expression")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("expression")
                        .HasColumnOrder(4);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name")
                        .HasColumnOrder(3);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("updated_by");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_date");

                    b.HasKey("Id");

                    b.HasIndex("EngineWorkflowCode");

                    b.ToTable("engine_workflow_expression");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRule", b =>
                {
                    b.HasOne("apps.Models.Entities.EngineWorkflow", null)
                        .WithMany("Rule")
                        .HasForeignKey("EngineWorkflowCode");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleApps", b =>
                {
                    b.HasOne("apps.Models.Entities.EngineRule", null)
                        .WithMany("Apps")
                        .HasForeignKey("EngineRuleCode");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleExpression", b =>
                {
                    b.HasOne("apps.Models.Entities.EngineRule", null)
                        .WithMany("Expressions")
                        .HasForeignKey("EngineRuleCode");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleMembership", b =>
                {
                    b.HasOne("apps.Models.Entities.EngineRule", null)
                        .WithMany("Memberships")
                        .HasForeignKey("EngineRuleCode");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleMop", b =>
                {
                    b.HasOne("apps.Models.Entities.EngineRule", null)
                        .WithMany("Mops")
                        .HasForeignKey("EngineRuleCode");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleResult", b =>
                {
                    b.HasOne("apps.Models.Entities.EngineRule", null)
                        .WithMany("Results")
                        .HasForeignKey("EngineRuleCode");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleSite", b =>
                {
                    b.HasOne("apps.Models.Entities.EngineRule", null)
                        .WithMany("Sites")
                        .HasForeignKey("EngineRuleCode");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRuleVariable", b =>
                {
                    b.HasOne("apps.Models.Entities.EngineRule", null)
                        .WithMany("Variables")
                        .HasForeignKey("EngineRuleCode");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineWorkflowExpression", b =>
                {
                    b.HasOne("apps.Models.Entities.EngineWorkflow", null)
                        .WithMany("Expression")
                        .HasForeignKey("EngineWorkflowCode");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineRule", b =>
                {
                    b.Navigation("Apps");

                    b.Navigation("Expressions");

                    b.Navigation("Memberships");

                    b.Navigation("Mops");

                    b.Navigation("Results");

                    b.Navigation("Sites");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("apps.Models.Entities.EngineWorkflow", b =>
                {
                    b.Navigation("Expression");

                    b.Navigation("Rule");
                });
#pragma warning restore 612, 618
        }
    }
}
